// <auto-generated />
using System;
using KayipEsyaPlatformu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KayipEsyaPlatformu.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250717220551_MesajEslesmeId")]
    partial class MesajEslesmeId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Bildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KullaniciId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("OkunduMu")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Bildirimler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Eslesme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("BenzerlikOrani")
                        .HasColumnType("double");

                    b.Property<int>("EslesenEsyaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EslesmeTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IlkEsyaId")
                        .HasColumnType("int");

                    b.Property<bool>("OnaylandiMi")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.HasIndex("EslesenEsyaId");

                    b.HasIndex("IlkEsyaId");

                    b.ToTable("Eslesmeler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Esya", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double?>("Boylam")
                        .HasColumnType("double");

                    b.Property<int>("DurumId")
                        .HasColumnType("int");

                    b.Property<double?>("Enlem")
                        .HasColumnType("double");

                    b.Property<int>("IlceId")
                        .HasColumnType("int");

                    b.Property<int>("KategoriId")
                        .HasColumnType("int");

                    b.Property<string>("Konum")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("KullaniciId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("MahalleId")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RenkId")
                        .HasColumnType("int");

                    b.Property<string>("ResimYolu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("SahipUlasildiMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("DurumId");

                    b.HasIndex("IlceId");

                    b.HasIndex("KategoriId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("MahalleId");

                    b.HasIndex("RenkId");

                    b.HasIndex("SehirId");

                    b.ToTable("Esyalar");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.EsyaDurumu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("EsyaDurumlari");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Hakkimizda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Degerlerimiz")
                        .HasColumnType("longtext");

                    b.Property<string>("Ekibimiz")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Misyon")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tarihce")
                        .HasColumnType("longtext");

                    b.Property<string>("Vizyon")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Hakkimizda");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Ilce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SehirId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SehirId");

                    b.ToTable("Ilceler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Iletisim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CalismaSaatleri")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HaritaKoordinatlari")
                        .HasColumnType("longtext");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IletisimFormuMetni")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OlusturmaTarihi")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SosyalMedyaLinkleri")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Iletisim");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.IletisimMesaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AdSoyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<bool>("OkunduMu")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("IletisimMesajlari");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Kategoriler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Mahalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("IlceId")
                        .HasColumnType("int");

                    b.Property<string>("PostaKodu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("SehirId")
                        .HasColumnType("int");

                    b.Property<int>("SemtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IlceId");

                    b.HasIndex("SehirId");

                    b.ToTable("Mahalleler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Markalar");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Mesaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AliciId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EslesmeId")
                        .HasColumnType("int");

                    b.Property<string>("GonderenId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("OkunduMu")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AliciId");

                    b.HasIndex("EslesmeId");

                    b.HasIndex("GonderenId");

                    b.ToTable("Mesajlar");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MarkaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarkaId");

                    b.ToTable("Modeller");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Renk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Renkler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.SahteBildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EsyaId")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("ModelSkoru")
                        .HasColumnType("double");

                    b.Property<string>("NedenSupheli")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("TespitTarihi")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("SahteBildiriler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Sehir", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sehirler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.TeslimNoktasi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Adres")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SorumluKisi")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TeslimNoktalari");
                });

            modelBuilder.Entity("Kullanici", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("AktifMi")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("longtext");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Bildirim", b =>
                {
                    b.HasOne("Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Eslesme", b =>
                {
                    b.HasOne("KayipEsyaPlatformu.Models.Esya", "EslesenEsya")
                        .WithMany()
                        .HasForeignKey("EslesenEsyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KayipEsyaPlatformu.Models.Esya", "IlkEsya")
                        .WithMany()
                        .HasForeignKey("IlkEsyaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EslesenEsya");

                    b.Navigation("IlkEsya");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Esya", b =>
                {
                    b.HasOne("KayipEsyaPlatformu.Models.EsyaDurumu", "Durum")
                        .WithMany("Esyalar")
                        .HasForeignKey("DurumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KayipEsyaPlatformu.Models.Ilce", "Ilce")
                        .WithMany()
                        .HasForeignKey("IlceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KayipEsyaPlatformu.Models.Kategori", "Kategori")
                        .WithMany("Esyalar")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kullanici", "Kullanici")
                        .WithMany()
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KayipEsyaPlatformu.Models.Mahalle", "Mahalle")
                        .WithMany()
                        .HasForeignKey("MahalleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KayipEsyaPlatformu.Models.Renk", "Renk")
                        .WithMany()
                        .HasForeignKey("RenkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KayipEsyaPlatformu.Models.Sehir", "Sehir")
                        .WithMany()
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Durum");

                    b.Navigation("Ilce");

                    b.Navigation("Kategori");

                    b.Navigation("Kullanici");

                    b.Navigation("Mahalle");

                    b.Navigation("Renk");

                    b.Navigation("Sehir");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Ilce", b =>
                {
                    b.HasOne("KayipEsyaPlatformu.Models.Sehir", "Sehir")
                        .WithMany("Ilceler")
                        .HasForeignKey("SehirId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sehir");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Mahalle", b =>
                {
                    b.HasOne("KayipEsyaPlatformu.Models.Ilce", "Ilce")
                        .WithMany("Mahalleler")
                        .HasForeignKey("IlceId");

                    b.HasOne("KayipEsyaPlatformu.Models.Sehir", "Sehir")
                        .WithMany()
                        .HasForeignKey("SehirId");

                    b.Navigation("Ilce");

                    b.Navigation("Sehir");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Mesaj", b =>
                {
                    b.HasOne("Kullanici", "Alici")
                        .WithMany()
                        .HasForeignKey("AliciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KayipEsyaPlatformu.Models.Eslesme", "Eslesme")
                        .WithMany()
                        .HasForeignKey("EslesmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kullanici", "Gonderen")
                        .WithMany()
                        .HasForeignKey("GonderenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alici");

                    b.Navigation("Eslesme");

                    b.Navigation("Gonderen");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Model", b =>
                {
                    b.HasOne("KayipEsyaPlatformu.Models.Marka", "Marka")
                        .WithMany()
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Kullanici", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.EsyaDurumu", b =>
                {
                    b.Navigation("Esyalar");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Ilce", b =>
                {
                    b.Navigation("Mahalleler");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Kategori", b =>
                {
                    b.Navigation("Esyalar");
                });

            modelBuilder.Entity("KayipEsyaPlatformu.Models.Sehir", b =>
                {
                    b.Navigation("Ilceler");
                });
#pragma warning restore 612, 618
        }
    }
}
